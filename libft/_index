TOTAL: 34 (done 25)

• isalpha				• 
• isdigit				• 
• isalnum				• 
• isascii				• 
• isprint				• 

/* ************************************************************************** */

• strlen				• 
• memset				• 
• bzero					• Writes n zeroed bytes to the string s. If n is zero, bzero() does nothing.
• memcpy				• 
• memmove				• 
• strlcpy				• 
• strlcat		X		• 
• toupper				• 
• tolower				• 
• strchr				• 
• strrchr				• 
• strncmp				• 
• memchr				• 
• memcmp				• 
• strnstr				• 
• atoi					• 

/* ************************************************************************** */

• calloc		X		• 
• strdup		O		• 

• ft_substr		X		• Allocates (with malloc(3)) and returns a substring from the string 's'.
						The substring begins at index 'start' and is of maximum size 'len'.
						
• ft_strjoin	X		• Allocates (with malloc(3)) and returns a new string, 
						which is the result of the concatenation of 's1' and 's2'.

• ft_strtrim	X		• Allocates (with malloc(3)) and returns a copy of 's1' with the characters
						specified in 'set' removed from the beginning and the end of the string.

• ft_split		X		• Allocates (with malloc(3)) and returns an array of strings obtained by
						splitting 's' using the character 'c' as a delimiter. The array must end
						with a NULL pointer.

• ft_itoa		X		• Allocates (with malloc(3)) and returns a string representing the integer 
						received as an argument. Negative numbers must be handled.

• ft_strmapi	X		• Applies the function 'f' to each character of the string 's', 
						and passing its index as first argument to create a new string (with malloc(3)) 
						resulting from successive applications of 'f'.

• ft_striteri	X		• Applies the function 'f' on each character of the string passed as argument, 
						passing its index as first argument. Each character is passed by address to 'f'
						to be modified if necessary.

/* ************************************************************************** */

• ft_putchar_fd			• Outputs the character 'c' to the given file descriptor.

• ft_putstr_fd			• Outputs the string 's' to the given file descriptor.

• ft_putendl_fd			• Outputs the string 's' to the given file descriptor followed by a newline.

• ft_putnbr_fd			• Outputs the integer 'n' to the given file descriptor.